@page "/ManageRepertoire"

@inject IDbContextFactory<DataContext> ContextFactory
@inject NavigationManager NavigationManager

<AuthorizeView Roles="Admin">
    <Authorized>

        <div class="container d-flex flex-column w-100 text-center">
            <div class="fs-4">Управление видео-контентом</div>

            <div style="max-width:500px;" class="d-flex flex-column gap-2 my-3 align-self-center">
                <NavLink class="btn btn-success" href="AddRepertoire">Добавить кино\сериал</NavLink>
            </div>
        </div>

        <div class="p-3">
            <table class="my-4 table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Изображение</th>
                        <th>Название</th>
                        <th>Режиссёр</th>
                        <th>Страна</th>
                        <th>Описание фильма</th>
                        <th>Студия</th>
                        <th>Дата выхода</th>
                        <th>Цена</th>
                        <th>Кол-во</th>
                        <th>Жанр</th>
                        <th>Дейсвтия</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var repertoire in _repertoire)
                    {
                        <tr>
                            <td><img height="180" width="120" src="@repertoire.Image" /></td>
                            <td>@repertoire.Title</td>
                            <td>@repertoire.Director</td>
                            <td>@repertoire.Country</td>
                            <td style="font-size: 14px">@repertoire.Description</td>
                            <td>@repertoire.Studio</td>
                            <td>@repertoire.ReleaseDate</td>
                            <td>@repertoire.Price</td>
                            <td>@repertoire.Quantity</td>
                            <td>
                                @foreach (var genre in repertoire.RepertoireGenres)
                                {
                                    <span>@genre.Genre.Name;</span>
                                }
                            </td>
                            <td>
                                <div class="text-center d-flex flex-column justify-content-center h-100">
                                    <button style="min-width:90px;" @onclick="()=> GoToUpdateRepertoirePage(repertoire.Id)" class="btn btn-primary my-1">Редактировать</button>
                                    <button style="min-width:90px;" @onclick=" ()=> DeleteRepertoire(repertoire.Id)" class="btn btn-danger my-1">Удалить</button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </Authorized>

    <NotAuthorized>
        <div>Не авторизован</div>
    </NotAuthorized>
</AuthorizeView>

@code {
    List<Repertoire> _repertoire = new();

    protected override async Task OnInitializedAsync()
    {
        using (var repo = new RepertoireRepository(ContextFactory.CreateDbContext()))
        {
            _repertoire = await repo.GetAllRepertoireAsync();
        }
    }

    async Task DeleteRepertoire(int id)
    {
        if (_repertoire.Any(r => r.Id == id))
        {
            using (var repo = new RepertoireRepository(ContextFactory.CreateDbContext()))
            {
                _repertoire.Remove(_repertoire.FirstOrDefault(rp => rp.Id == id));
                await repo.DeleteRepertoireAsync(id);
                await InvokeAsync(StateHasChanged);
            }
        }
    }

    void GoToUpdateRepertoirePage(int id)
    {
        NavigationManager.NavigateTo($"/UpdateRepertoire/{id}");
    }
}
